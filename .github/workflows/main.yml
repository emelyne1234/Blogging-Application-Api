name: CI/CD Pipeline

on:
  push:
    branches: [main]

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - name: Check Environment Variables
        run: |
          echo "mongo_url: ${{ env.mongo_url }}"
          echo "mongo_url_test: ${{ env.mongo_url_test }}"
          echo "secret_key: ${{ env.secret_key }}"
          echo "port: ${{ env.port }}"
          echo "cloud_name: ${{ env.cloud_name }}"
          echo "api_key: ${{ env.api_key }}"
          echo "api_key_secret: ${{ env.api_key_secret }}"
      - name: NPM install, build and test
        run: |
          npm install
          npm run test
        env:
          mongo_url: ${{ env.mongo_url }}
          mongo_url_test: ${{ env.mongo_url_test }}
          secret_key: ${{ env.secret_key }}
          port: ${{ env.port }}
          cloud_name: ${{ env.cloud_name }}
          api_key: ${{ env.api_key }}
          api_key_secret: ${{ env.api_key_secret }}
  build:
    name: Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - name: NPM install and build
        run: |
          npm install
          npm run build

  deploy:
    name: Deploy
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to production
        uses: johnbeynon/render-deploy-action@v0.0.8
        with:
          service-id: ${{ env.service_id }} 
          api-key: ${{ env.render_api_key }} 
